<FrameworkContentElement x:Class="SA.Test.Extensions.ResourceSource"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:System="clr-namespace:System;assembly=netstandard"
        xmlns:Ext="clr-namespace:SA.Agnostic.UI.Extensions"
        xmlns:Test="clr-namespace:SA.Test.Extensions"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FrameworkContentElement.Resources>
        <!-- using parameterless TypeKey constructor, TargetType is assigned as property -->
        <Ext:DataTypeProvider x:Key="{Ext:TypeKey TargetType={x:Type Test:ResourceTarget}}">
            <Ext:DataTypeProvider.Members>
                <Ext:Member Name="Thickness" Type="{x:Type Thickness}" Value="0 2 13 1"/>
                <Ext:Member Name="Name" Value="My family name"/>
                <Ext:Member Name="Count" Value="100" MemberKind="Field" Type="{x:Type System:Int32}" />
                <Ext:Member Name="Color" Value="Red" Type="{x:Type Color}" />
                <Ext:Member Name="Description" Value="This is a simpler demonstration of getting values from a resource dictionary"/>
            </Ext:DataTypeProvider.Members>
        </Ext:DataTypeProvider>
        <!-- using TypeKey constructor with Type parameter used to set TargetType property -->
        <Ext:DataTypeProvider x:Key="{Ext:TypeKey {x:Type Test:ResourceTarget2}}">
            <Ext:DataTypeProvider.Members>
                <Ext:Member Name="Thickness2" Value="202 4 15 2" MemberKind="Field" Type="{x:Type Thickness}"/>
                <Ext:Member Name="Name2" Value="Type 2: My family name"/>
                <Ext:Member Name="count2" Value="200" MemberKind="Field" Type="{x:Type System:Int32}"/>
                <Ext:Member Name="Description2" Value="Type 2: This is a simpler demonstration of getting values from a resource dictionary"/>
            </Ext:DataTypeProvider.Members>
        </Ext:DataTypeProvider>
    </FrameworkContentElement.Resources>
</FrameworkContentElement>
